To get the Data from the data table by filling the data adapter
connection = new SqlConnection(connectionString);
        dt = new DataTable();
        connection.Open();
        sqlCmd = new SqlCommand("SELECT FirstName,LastName,DateOfBirth,Gender,EmailID,Password,Vehicle,Vehicletype from UserRegistraion WHERE UserName = @UserName", connection);
        sqlDa = new SqlDataAdapter(sqlCmd);
        sqlCmd.Parameters.AddWithValue("@UserName", Convert.ToString(Session["username"]));
        sqlDa.Fill(dt);
        if (dt.Rows.Count > 0)
        txtFirst.Text = dt.Rows[0]["FirstName"].ToString();
        txtLast.Text = dt.Rows[0]["LastName"].ToString();
        CalendarUserControl.SelectedDate = dt.Rows[0]["DateOfBirth"].ToString();
        RadioButtonList2.SelectedValue = dt.Rows[0]["Gender"].ToString();
        txtEmail.Text = dt.Rows[0]["EmailID"].ToString();
        ddlcarmodel1.SelectedValue = dt.Rows[0]["Vehicle"].ToString();
        type = dt.Rows[0]["Vehicle"].ToString();
        connection.Close();


Best Way to bind the dropdown using list item:
drpmodel.Items.Clear();
        sqlConnection = new SqlConnection(connection);
        ds = new DataSet();
        string text = "Select Vehicletype,Vehicle from Vehicles where Vehicletype='Car'";
        if (DropDownList1.SelectedValue == "bike")
            text = "Select Vehicletype,Vehicle from Vehicles where Vehicletype='bike'";
        cmd = new SqlCommand(text, sqlConnection);
        sqlConnection.Open();
        da = new SqlDataAdapter(cmd);
        da.Fill(ds);
        foreach (DataRow row in ds.Tables[0].Rows)
        {
            ListItem li = new ListItem();
            li.Text = row["Vehicle"].ToString();
            li.Value = row["Vehicle"].ToString();
            drpmodel.Items.Add(li);
        }


Simple Way to bind the dropdown  using data reader:
SqlConnection con = new SqlConnection(strCon);
        con.Open();
        generate = "Select UserId,FirstName from UserRegistraion where Vehicletype='" + DropDownList1.SelectedValue + "' AND vehicle ='" + txtseName.Text + "'";
        cmd = new SqlCommand(generate, con);
        rdr = cmd.ExecuteReader();
        Drplist.DataTextField = "FirstName";
        Drplist.DataValueField = "UserId";
        Drplist.DataSource = rdr;
        Drplist.DataBind();
Simple Way to bind the dropdown using data set:
 SqlConnection con = newSqlConnection(ConfigurationManager.ConnectionStrings["ConnString"].ConnectionString);

        SqlCommand cmd = new SqlCommand("Select * from students", con);

        SqlDataAdapter da = new SqlDataAdapter(cmd);

        DataSet ds = new DataSet();
        da.Fill(ds);
       
        DropDownList1.DataTextField = ds.Tables[0].Columns["FullName"].ToString();
        DropDownList1.DataValueField = ds.Tables[0].Columns["id"].ToString();

        DropDownList1.DataSource = ds.Tables[0];
        DropDownList1.DataBind();


Simple Way to bind the dropdown using data set:
//conenction path for database
uing (SqlConnection con = new SqlConnection("Data Source=SureshDasari;Integrated Security=true;Initial Catalog=MySampleDB"))
{
con.Open();
SqlCommand cmd = new SqlCommand("Select UserId,UserName FROM UserInformation", con);
SqlDataAdapter da = new SqlDataAdapter(cmd);
DataSet ds = new DataSet();
da.Fill(ds);
ddlCountry.DataSource = ds;
ddlCountry.DataTextField = "UserName";
ddlCountry.DataValueField = "UserId";
ddlCountry.DataBind();
ddlCountry.Items.Insert(0, new ListItem("--Select--", "0"));
con.Close();



Reseed the identity constraint value:
DBCC CHECKIDENT(tblPerson, RESEED, 0)


Append Select in dropdownlist:
 drpRoleID.Items.Insert(0, new ListItem("Select Role", "0"));


Bring the Dropdown to normal selection after rebind:
   
drpRoleID.Items.Clear();



Joins Sample:
Select UserID,UserName,U.RoleID,R.RoleName from Din_User U,Din_Role R where U.RoleID=R.RoleID

Select U.UserID,U.UserName,U.Password,R.RoleName,U.IsActive,U.CreatedBy,U.CreatedDate,U.ModifiedBy,U.ModifiedDate from Din_User U,Din_Role R where U.RoleID = R.RoleID 



Querey string


                                <asp:HyperLink ID="HyperLink2" runat="server" NavigateUrl='<%# string.Format("~/WebPages/Role_Edit.aspx?RoleID={0}&RoleName={1}",Eval("RoleID"),Eval("RoleName")) %>' >Edit</asp:HyperLink>


Gridview Deleting : 
    #region[Gridview Deleting]
    /// <summary>
    /// This is Used to delete the gridview row
    /// </summary>
    /// <param name="sender"></param>
    /// <param name="e"></param>
    protected void gvDetails_RowDeleting(object sender, GridViewDeleteEventArgs e)
    {
        con = new SqlConnection(connectionString);
        int VehicleID = Convert.ToInt32(gvDetails.DataKeys[e.RowIndex].Values["VehicleID"].ToString());
        string VehicleName = gvDetails.DataKeys[e.RowIndex].Values["Vehicle"].ToString();
        con.Open();
        cmd = new SqlCommand("delete from Vehicles where VehicleID=" + VehicleID, con);
        int result = cmd.ExecuteNonQuery();
        con.Close();
        if (result == 1)
            BindEmployeeDetails();
        lblresult.ForeColor = System.Drawing.Color.Red;
        lblresult.Text = VehicleName + " details deleted successfully";
    }
    #endregion 

select PUDateTime, DeliveryDate, ProNumber, USTotal As USTotalDue, (USTotal-AscCharges) As 'Freight+Fuel', ISNULL(PUCost,0) As PUCost, ISNULL(LHCost,0) AS LHCost, ISNULL(DelvCost,0) AS DelvCost, 
    ROUND(CASE WHEN ISNULL(USTotal,0) <= 0 THEN 0 ELSE
    (USTotal - AscCharges -(ISNULL(PUCost,0)+ISNULL(LHCost,0)+ISNULL(DelvCost,0)))*100.0/(USTotal-AscCharges) END,2) AS ProfitMargin,
    OrigTerm, DestTerm, SalesmanCode
from vProCostingData 
where DeliveryDate BETWEEN '03/04/2015' AND '03/18/2015' AND BillToHostCode = '82086'
ORDER BY DeliveryDate

Territory Sales Margin Report : http://herculesfreight.com/Forms/territorysales_marginreport:
select PUDateTime, DeliveryDate, ProNumber, ISNULL(USTotal,0) AS USTotalDue, ISNULL(USTotal-AscCharges,0) AS 'Freight+Fuel', ISNULL(PUCost,0) AS PUCost,
    ISNULL(LHCost,0) AS LHCost, ISNULL(DelvCost,0) AS DelvCost,CASE WHEN ISNULL(USTotal,0)=0 THEN 0 ELSE 
(ISNULL(USTotal-AscCharges,0)-(ISNULL(PUCost,0)+ISNULL(LHCost,0)+ISNULL(DelvCost,0)))*100.0 / ISNULL(USTotal-AscCharges,1) 
END AS ProfitMargin, OrigTerm, DestTerm, ISNULL(SalesmanCode,'') AS Salesman 
FROM vProCostingData
WHERE DeliveryDate BETWEEN '03/17/2015' AND '03/31/2015' AND (SalesmanCode = '2') 
ORDER BY DeliveryDate






Page Indexing Event in Gridview
#region[Gridview PageIndexing]
    /// <summary>
    /// This is used for Indexing the page in the gridview
    /// </summary>
    /// <param name="sender"></param>
    /// <param name="e"></param>
    protected void gvDetails_PageIndexChanging(object sender, GridViewPageEventArgs e)
    {
        gvDetails.PageIndex = e.NewPageIndex;
        BindEmployeeDetails();
    }
    #endregion

To show number of pages:
User page Size=10

To Redirect the page
Response.Redirect("~/WebPages/Role.aspx");

Space:
&nbsp for space

Text mode=password
Causesvalidation =false;
Requiredfieldvalidator=false;


Change the text in gridview according to the status :
<asp:Label ID="lblIsAcitve" runat="server" Text='<%# Convert.ToString(Eval("IsActive")) == "Y" ? "Active" : "InActive" %>'></asp:Label>

Getting todays date
this.tbDate.Text = DateTime.Today.ToString("dd/MM/yyyy");

Gridview overflow
<div style="overflow-x:auto;width:800px">
   GridView here
</div>


To show no record Found in grid view use these code
else
        {
            ds.Tables[0].Rows.Add(ds.Tables[0].NewRow());
            gvDetails.DataSource = ds;
            gvDetails.DataBind();
            int columncount = gvDetails.Rows[0].Cells.Count;
            gvDetails.Rows[0].Cells.Clear();
            gvDetails.Rows[0].Cells.Add(new TableCell());
            gvDetails.Rows[0].Cells[0].ColumnSpan = columncount;
            gvDetails.Rows[0].Cells[0].Text = "No Records Found";
        }


"~/WebPages/TimeSlot_Edit.aspx?TimeslotID={0}&TimeSlotName={1}&Monday={2}&Tuesday={3}&Wednesday={4}&Thursday={5}&Friday={6}&Saturday={7}&Sunday={8}&MondayTiming={9}&TuesdayTiming={10}&WednesdayTiming={11}&ThursdayTiming={12}&FridayTiming={13}&SaturdayTimng={14}&SundayTiming ={15}&IsActive={16}",Eval("TimeslotID"),Eval("TimeSlotName"), Eval("Monday "), Eval("Tuesday "), Eval("Wednesday "), Eval("Thursday "), Eval("Friday "), Eval("Saturday "), Eval("Sunday "), Eval("MondayTiming "), Eval("TuesdayTiming "), Eval("WednesdayTiming "), Eval("ThursdayTiming "), Eval("FridayTiming "), Eval("SaturdayTimng "), Eval("SundayTiming "),Eval("IsActive")) %>'

	

Passsing query string:
  if (Request["TimeslotID"] != null)
                querytimeslotid = Convert.ToInt32(Request["[TimeslotID"]);

iterate through the foreach loop in datetable for not using dataset
foreach (DataRow row in myDataTable.Rows)
{
   Console.WriteLine(row["ImagePath"]);
}



Common code to bind dropdown using data table :
#region[Generate Role list in dropdown]
    /// <summary>
    /// Function to bind the list of vehicles in dropdown Model
    /// </summary>
    public void dropdowngenerate()
    {
        db = new Database();
        dt = new DataTable();
        dt = db.SelectUsingDataTable("Select RoleID,RoleName from Din_Role");
        foreach (DataRow row in dt.Rows)
        {
            ListItem li = new ListItem();
            li.Text = row["RoleName"].ToString();
            li.Value = row["RoleID"].ToString();
            drpUserstatus.Items.Add(li);
        }

    }
    #endregion


Iterating through the list box and insert it on the database
public static string ListBoxToString(ListBox lb)
{
    List<string> values = new List<string>();            
    for (int i = 0; i < lb.Items.Count; i++)
    {
        values.Add(lb.Items[i].ToString());  
    }

    string result = String.Join(",", values);
    return result;
}



<tr>
                        <td >
                            <asp:Label ID="lbllast" runat="server" Text="Status" /></td>
                        <td>
                          <asp:RadioButtonList ID="rdblist" runat="server">
                              <asp:ListItem Text="Active" Selected="True" Value="Y"></asp:ListItem>
                              <asp:ListItem Text="InActive" Value="N"></asp:ListItem>
                          </asp:RadioButtonList> </td>                          
                    </tr>



Loop through list items and insert the value in database
  foreach (ListItem li in lstsports.Items)
        {
            if (li.Selected)
            {
                result = db.ExecuteQuery("insert into Din_Court(PlayerID,SportsID,TimeslotID,CreatedBy,CreatedDate) values('" + drpplayerlist.SelectedValue + "','" + li.Value + "','','" + currentUser.UserID + "', GETDATE())");
            }
        }


Recent joins used:
Select C.PlayerID,C.SportsID,S.SportsName from Din_Court C,Din_Player P,Din_Sports S  where C.PlayerID=12 AND C.SportsID = S.SportsID


 
When you put the distinct button you can avoid dropdownlist improper generation



For linking two options

<asp:TemplateField HeaderText="Status">
    <ItemTemplate>
        <%# string.Format("{0} {1}", Eval("field1 ") ,Eval("field2"))%>
    </ItemTemplate>
    </asp:TemplateField>


<asp:TemplateField HeaderText="Status">
  <ItemTemplate>
    <asp:Label runat="server" ID="lbStatus" Text='<%#GetStatus(Eval("Status1"),Eval("Status2")) %>'></asp:Label>
     </ItemTemplate>
  </asp:TemplateField>


  public string GetStatus(object Status1, object Status2)
    {
        return (string)Status1 + " " + (string)Status2;
    }


Random number generator:
private void button5_Click(object sender, EventArgs e)
{
    Random slumpGenerator = new Random(); 
    int tal = slumpGenerator.Next(0, 1000); 
    txtBxName.Text = tal.ToString();
}

To convert string to int use the following
int amountpaid = int.Parse(dt.Rows[0]["AmountPaid"].ToString());
converting to date:
CONVERT(date, DateofBirth)
DateTime dt = Convert.ToDateTime(date);    

Todays Date
DateTime.Now.ToString("M/d/yyyy");
CAST('2014-07-23 09:37:00.000' AS datetime2)



To concordinate the string in Gridview 
'<%# string.Concat(Eval("FirstName"), " ", Eval("LastName"))%>'

DateTime parsing:
DateTime.ParseExact(txtregistration.Text, "dd/MM/yyyy", CultureInfo.InvariantCulture)

DateTime.ParseExact(txtDOB.Text, "dd/MM/yyyy", CultureInfo.InvariantCulture)


Validating Email Address 
\w+([-+.']\w+)*@\w+([-.]\w+)*\.\w+([-.]\w+)*


Best Way to Convert the date coming from the database into current format
  DateTime DateofBirth = (DateTime)dt.Rows[0]["DateofBirth"];
            txtDOB.Text = DateofBirth.ToString("yyyy/MM/dd");

If condition for string we cannot use two && 

Validating date as dd/MM/yyyy
^(?:(?:31(\/|-|\.)(?:0?[13578]|1[02]))\1|(?:(?:29|30)(\/|-|\.)(?:0?[1,3-9]|1[0-2])\2))(?:(?:1[6-9]|[2-9]\d)?\d{2})$|^(?:29(\/|-|\.)0?2\3(?:(?:(?:1[6-9]|[2-9]\d)?(?:0[48]|[2468][048]|[13579][26])|(?:(?:16|[2468][048]|[3579][26])00))))$|^(?:0?[1-9]|1\d|2[0-8])(\/|-|\.)(?:(?:0?[1-9])|(?:1[0-2]))\4(?:(?:1[6-9]|[2-9]\d)?\d{2})$


Find the controls and filed data in the Gridvew
  status = "Active";
        con = new SqlConnection(connectionString);
        foreach (GridViewRow row in gvrecords.Rows)
        {
            if (row.RowType == DataControlRowType.DataRow)
            {
                CheckBox chkRow = (row.Cells[12].FindControl("chkSelect") as CheckBox);
                if (chkRow.Checked)
                {
                    UserName = row.Cells[7].Text;
                    Mailaddress = row.Cells[5].Text;
                    mailname = row.Cells[1].Text;
                }
            }
Use this code for Hiding and showing the hyperlink in gridview
   protected void gvUser_RowDataBound(object sender, GridViewRowEventArgs e)
    {
        if (e.Row.RowType == DataControlRowType.DataRow)
        {
            HyperLink hyper = e.Row.FindControl("HyperEdit") as HyperLink;
            Label Status = e.Row.FindControl("LBLStatus") as Label;
            if (Status.Text == "Opened")
            {
                hyper.Visible = true;
            }
        }

    }

Datatable is null or not 

17down vote	First make sure that DataTable is not null and than check for the row count
if(dt!=null)
{
  if(dt.Rows.Count>0)
  {
    //do your code 
  }
}


Master Page file Exceution
   protected void Page_PreInit(object sender, EventArgs e)
    {
        currentUser = new CurrentUser();
        if (Session["User"] != null)
            currentUser = (CurrentUser)Session["User"];
        if (currentUser.UserID == 1)
        {
            this.MasterPageFile = "~/MasterPages/Administrator.master";
        }
        else
        {
            this.MasterPageFile = "~/MasterPages/Users.master";
        }
    }


Master page preinit:    
protected override void OnPreInit(EventArgs e)
    {
        this.MasterPageFile = "~/MasterPages/Administrator.master";
        this.MasterPageFile = "~/MasterPages/Users.master";
        base.OnPreInit(e);
    }

Send query string in Button Click:
protected void Button_Click(object sender, EventArgs e)
{
   Int32 id = 1;
   // Or your logic to generate id
   string url = String.Format("anypage.aspx?id={0}",id.ToString());

}


Validation for Strings with spaces:
^[a-zA-Z ]{1,25}$


Code to use for Session Timeout :
<configuration>
  <system.web>
    <sessionState 
      mode="InProc"
      cookieless="true"
      timeout="30" />
  </system.web>
</configuration>

